# Autogenerated from a Treetop grammar. Edits may be lost.


module Brevity

module Sequence
  include Treetop::Runtime

  def root
    @root ||= :sequence
  end

  include Note

  module Sequence0
    def note
      elements[1]
    end
  end

  module Sequence1
    def first
      elements[0]
    end

    def more
      elements[1]
    end
  end

  def _nt_sequence
    start_index = index
    if node_cache[:sequence].has_key?(index)
      cached = node_cache[:sequence][index]
      if cached
        node_cache[:sequence][index] = cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
        @index = cached.interval.end
      end
      return cached
    end

    i0, s0 = index, []
    r1 = _nt_note
    s0 << r1
    if r1
      s2, i2 = [], index
      loop do
        i3, s3 = index, []
        s4, i4 = [], index
        loop do
          if has_terminal?(@regexps[gr = '\A[\\s]'] ||= Regexp.new(gr), :regexp, index)
            r5 = true
            @index += 1
          else
            terminal_parse_failure('[\\s]')
            r5 = nil
          end
          if r5
            s4 << r5
          else
            break
          end
        end
        if s4.empty?
          @index = i4
          r4 = nil
        else
          r4 = instantiate_node(SyntaxNode,input, i4...index, s4)
        end
        s3 << r4
        if r4
          r6 = _nt_note
          s3 << r6
        end
        if s3.last
          r3 = instantiate_node(SyntaxNode,input, i3...index, s3)
          r3.extend(Sequence0)
        else
          @index = i3
          r3 = nil
        end
        if r3
          s2 << r3
        else
          break
        end
      end
      if s2.empty?
        @index = i2
        r2 = nil
      else
        r2 = instantiate_node(SyntaxNode,input, i2...index, s2)
      end
      s0 << r2
    end
    if s0.last
      r0 = instantiate_node(SequenceNode,input, i0...index, s0)
      r0.extend(Sequence1)
    else
      @index = i0
      r0 = nil
    end

    node_cache[:sequence][start_index] = r0

    r0
  end

end

class SequenceParser < Treetop::Runtime::CompiledParser
  include Sequence
end


end
