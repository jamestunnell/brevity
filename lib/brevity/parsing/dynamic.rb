# Autogenerated from a Treetop grammar. Edits may be lost.


module Brevity

module Dynamic
  include Treetop::Runtime

  def root
    @root ||= :dynamic
  end

  module Dynamic0
    def dynamic_level
      elements[0]
    end

    def dynamic_change
      elements[1]
    end
  end

  def _nt_dynamic
    start_index = index
    if node_cache[:dynamic].has_key?(index)
      cached = node_cache[:dynamic][index]
      if cached
        cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
        @index = cached.interval.end
      end
      return cached
    end

    i0 = index
    i1, s1 = index, []
    r2 = _nt_dynamic_level
    s1 << r2
    if r2
      r3 = _nt_dynamic_change
      s1 << r3
    end
    if s1.last
      r1 = instantiate_node(SyntaxNode,input, i1...index, s1)
      r1.extend(Dynamic0)
    else
      @index = i1
      r1 = nil
    end
    if r1
      r0 = r1
    else
      r4 = _nt_dynamic_level
      if r4
        r0 = r4
      else
        r5 = _nt_dynamic_change
        if r5
          r0 = r5
        else
          @index = i0
          r0 = nil
        end
      end
    end

    node_cache[:dynamic][start_index] = r0

    r0
  end

  def _nt_dynamic_change
    start_index = index
    if node_cache[:dynamic_change].has_key?(index)
      cached = node_cache[:dynamic_change][index]
      if cached
        cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
        @index = cached.interval.end
      end
      return cached
    end

    i0 = index
    if has_terminal?("<", false, index)
      r1 = instantiate_node(SyntaxNode,input, index...(index + 1))
      @index += 1
    else
      terminal_parse_failure("<")
      r1 = nil
    end
    if r1
      r0 = r1
    else
      if has_terminal?(">", false, index)
        r2 = instantiate_node(SyntaxNode,input, index...(index + 1))
        @index += 1
      else
        terminal_parse_failure(">")
        r2 = nil
      end
      if r2
        r0 = r2
      else
        @index = i0
        r0 = nil
      end
    end

    node_cache[:dynamic_change][start_index] = r0

    r0
  end

  def _nt_dynamic_level
    start_index = index
    if node_cache[:dynamic_level].has_key?(index)
      cached = node_cache[:dynamic_level][index]
      if cached
        cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
        @index = cached.interval.end
      end
      return cached
    end

    i0 = index
    if has_terminal?("ppp", false, index)
      r1 = instantiate_node(SyntaxNode,input, index...(index + 3))
      @index += 3
    else
      terminal_parse_failure("ppp")
      r1 = nil
    end
    if r1
      r0 = r1
    else
      if has_terminal?("pp", false, index)
        r2 = instantiate_node(SyntaxNode,input, index...(index + 2))
        @index += 2
      else
        terminal_parse_failure("pp")
        r2 = nil
      end
      if r2
        r0 = r2
      else
        if has_terminal?("p", false, index)
          r3 = instantiate_node(SyntaxNode,input, index...(index + 1))
          @index += 1
        else
          terminal_parse_failure("p")
          r3 = nil
        end
        if r3
          r0 = r3
        else
          if has_terminal?("mp", false, index)
            r4 = instantiate_node(SyntaxNode,input, index...(index + 2))
            @index += 2
          else
            terminal_parse_failure("mp")
            r4 = nil
          end
          if r4
            r0 = r4
          else
            if has_terminal?("mf", false, index)
              r5 = instantiate_node(SyntaxNode,input, index...(index + 2))
              @index += 2
            else
              terminal_parse_failure("mf")
              r5 = nil
            end
            if r5
              r0 = r5
            else
              if has_terminal?("fff", false, index)
                r6 = instantiate_node(SyntaxNode,input, index...(index + 3))
                @index += 3
              else
                terminal_parse_failure("fff")
                r6 = nil
              end
              if r6
                r0 = r6
              else
                if has_terminal?("ff", false, index)
                  r7 = instantiate_node(SyntaxNode,input, index...(index + 2))
                  @index += 2
                else
                  terminal_parse_failure("ff")
                  r7 = nil
                end
                if r7
                  r0 = r7
                else
                  if has_terminal?("f", false, index)
                    r8 = instantiate_node(SyntaxNode,input, index...(index + 1))
                    @index += 1
                  else
                    terminal_parse_failure("f")
                    r8 = nil
                  end
                  if r8
                    r0 = r8
                  else
                    @index = i0
                    r0 = nil
                  end
                end
              end
            end
          end
        end
      end
    end

    node_cache[:dynamic_level][start_index] = r0

    r0
  end

end

class DynamicParser < Treetop::Runtime::CompiledParser
  include Dynamic
end


end